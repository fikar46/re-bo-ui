{"version":3,"sources":["components/menu/dashboard/index.js","components/menu/tools/manageMerchant/index.js","components/menu/tools/manageUsers/index.js","components/menu.js","components/home.js","App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["Dashboard","react_default","a","createElement","Component","ManageMerchant","ManageUsers","MenuRE","react_router","path","component","withRouter","connect","state","SubMenu","Menu","Sider","Layout","Homes","collapsed","logo","name","toggle","_this","setState","layout","trigger","collapsible","this","theme","className","href","src","alt","menu","mode","defaultSelectedKeys","Item","key","icon","type","title","style","background","Navbar","light","expand","onClick","Nav","navbar","NavItem","class","components_menu","App","Boolean","window","location","hostname","match","combineReducers","store","createStore","reducers","applyMiddleware","ReduxThunk","ReactDOM","render","es","react_router_dom","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yXAYeA,2LAPP,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oCALYC,cCUTC,mLAPP,OACEJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,yCALiBC,aCUdE,mLAPP,OACEL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sCALcC,aCIpBG,mLAEF,OACEN,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAOC,KAAK,4BAA4BC,UAAWV,IACnDC,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAOC,KAAK,iCAAiCC,UAAWL,IACxDJ,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAOC,KAAK,8BAA8BC,UAAWJ,YAN1CF,aAgBNO,cAAWC,YALH,SAACC,GACtB,MAAO,IAIiBD,CAAyBL,ICb3CO,EAAWC,IAAXD,QACAE,EAAUC,IAAVD,MAmHOE,6MAjHXL,MAAQ,CACJM,WAAW,EACXC,MAAK,EACLC,KAAK,iBAGPC,OAAS,WACPC,EAAKC,SAAS,CACZL,WAAYI,EAAKV,MAAMM,UACvBC,MAAMG,EAAKV,MAAMO,OAEnBG,EAAKH,UAEPA,KAAK,WACGG,EAAKV,MAAMO,KAGbG,EAAKC,SAAS,CAACH,KAAK,KAFlBE,EAAKC,SAAS,CAACH,KAAK,yFAM1B,OACIpB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACAxB,EAAAC,EAAAC,cAACa,EAAD,CAAOU,QAAS,KAAMC,aAAW,EAACR,UAAWS,KAAKf,MAAMM,UAAYU,MAAM,SAI3E5B,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,aAChB7B,EAAAC,EAAAC,cAAA,KAAG4B,KAAK,6BAAR,IAAqC9B,EAAAC,EAAAC,cAAA,OAAK6B,IAAI,yBAAyBF,UAAU,YAAYG,IAAI,SAAjG,IAA0GhC,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,yCAAyCF,KAAKf,MAAMQ,MAA9K,MAIIpB,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAML,MAAM,QAAQM,KAAK,SAASC,oBAAqB,CAAC,MAEtDnC,EAAAC,EAAAC,cAAC+B,EAAA,EAAKG,KAAN,CAAWC,IAAI,KACdrC,EAAAC,EAAAC,cAAA,KAAG4B,KAAK,6BAAR,IAAqC9B,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAMC,KAAK,SAC/CvC,EAAAC,EAAAC,cAAA,2BAEFF,EAAAC,EAAAC,cAACW,EAAD,CACIwB,IAAI,OACJG,MACIxC,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAMC,KAAK,iBACZvC,EAAAC,EAAAC,cAAA,8BAKPF,EAAAC,EAAAC,cAAC+B,EAAA,EAAKG,KAAN,CAAWC,IAAI,KAAf,WACArC,EAAAC,EAAAC,cAAC+B,EAAA,EAAKG,KAAN,CAAWC,IAAI,KAAf,WACArC,EAAAC,EAAAC,cAAC+B,EAAA,EAAKG,KAAN,CAAWC,IAAI,KAAf,YAEJrC,EAAAC,EAAAC,cAACW,EAAD,CACQwB,IAAI,OACJG,MACIxC,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAMC,KAAK,UAAUX,MAAM,WAC5B5B,EAAAC,EAAAC,cAAA,uBAKPF,EAAAC,EAAAC,cAAC+B,EAAA,EAAKG,KAAN,CAAWC,IAAI,KAAIrC,EAAAC,EAAAC,cAAA,KAAG4B,KAAK,+BAAR,iBACnB9B,EAAAC,EAAAC,cAAC+B,EAAA,EAAKG,KAAN,CAAWC,IAAI,KAAIrC,EAAAC,EAAAC,cAAA,KAAG4B,KAAK,8BAAR,gBACnB9B,EAAAC,EAAAC,cAAC+B,EAAA,EAAKG,KAAN,CAAWC,IAAI,KAAIrC,EAAAC,EAAAC,cAAA,KAAG4B,KAAK,mCAAR,sBACnB9B,EAAAC,EAAAC,cAAC+B,EAAA,EAAKG,KAAN,CAAWC,IAAI,MAAf,IAAsBrC,EAAAC,EAAAC,cAAA,KAAG4B,KAAK,kCAAR,uBAI1B9B,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACExB,EAAAC,EAAAC,cAAA,OAAKuC,MAAO,CAAEC,WAAY,WAAYb,UAAU,QAC9C7B,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAASC,OAAK,EAACC,OAAO,MAEtB7C,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CACFT,UAAU,qBACVU,KAAMZ,KAAKf,MAAMM,UAAY,cAAgB,YAC7C4B,QAASnB,KAAKN,SAGhBrB,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAKlB,UAAU,UAAUmB,QAAM,GAC7BhD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,KACAjD,EAAAC,EAAAC,cAAA,OAAKgD,MAAM,oBACOlD,EAAAC,EAAAC,cAAA,OAAKgD,MAAM,aACPlD,EAAAC,EAAAC,cAAA,QAAMgD,MAAM,cAAZ,aADJ,QAEIlD,EAAAC,EAAAC,cAAA,QAAMgD,MAAM,+BAAZ,6CAEJlD,EAAAC,EAAAC,cAAA,OAAKgD,MAAM,cAAX,SAEIlD,EAAAC,EAAAC,cAAA,QAAMgD,MAAM,6BAAZ,aAOxBlD,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAKlB,UAAU,UAAUmB,QAAM,GAC7BhD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,KACDjD,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,sBACf7B,EAAAC,EAAAC,cAAA,KAAGgD,MAAM,qCAQNlD,EAAAC,EAAAC,cAACiD,EAAD,eA3GIhD,aCJdiD,mLAEF,OACEpD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAOC,KAAK,kBAAkBC,UAAWQ,YAJ/Bd,aAcHO,cAAWC,YALH,SAACC,GACtB,MAAO,IAIiBD,CAAyByC,ICT/BC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,+EChBSC,cAAgB,aCQzBC,EAAQC,YAAYC,EAAU,GAAIC,YAAgBC,MACxDC,IAASC,OACLjE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAUP,MAAOA,GACjB3D,EAAAC,EAAAC,cAACiE,EAAA,EAAD,KACInE,EAAAC,EAAAC,cAACkE,EAAD,QAIRC,SAASC,eAAe,SF+GlB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.fd1098c4.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Dashboard extends Component{\n   \n      render() {\n        return (\n          <div>\n            <h1>ini dashboards</h1>\n          </div>\n        );\n      }\n}\nexport default Dashboard;\n","import React, { Component } from 'react';\n\nclass ManageMerchant extends Component{\n   \n      render() {\n        return (\n          <div>\n            <h1>ini Manage Merchant</h1>\n          </div>\n        );\n      }\n}\nexport default ManageMerchant;\n","import React, { Component } from 'react';\n\nclass ManageUsers extends Component{\n   \n      render() {\n        return (\n          <div>\n            <h1>ini Manage Users</h1>\n          </div>\n        );\n      }\n}\nexport default ManageUsers;\n","import React, { Component } from 'react';\nimport {Route,withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport Dashboard from './menu/dashboard';\nimport ManageMerchant from './menu/tools/manageMerchant';\nimport ManageUsers from './menu/tools/manageUsers';\nclass MenuRE extends Component{\n  render(){\n    return(\n      <div>\n          <Route path=\"/RiskMonitoring/Dashboard\" component={Dashboard}/>\n          <Route path=\"/RiskMonitoring/managemerchant\" component={ManageMerchant}/>\n          <Route path=\"/RiskMonitoring/manageusers\" component={ManageUsers}/>    \n      </div>\n    )\n  }\n}\nconst mapStateToProps =(state)=>{\n  return {\n    \n  };\n}\nexport default withRouter(connect(mapStateToProps)(MenuRE));\n","import React, { Component } from 'react';\nimport { Layout, Menu, Icon } from 'antd';\nimport {\n  Navbar,\n  Nav,\n  NavItem} from 'reactstrap';\nimport '../App.css'\nimport 'antd/dist/antd.css'\nimport MenuRE from './menu';\nconst { SubMenu} = Menu;\nconst { Sider } = Layout;\nclass Homes extends Component{\n    state = {\n        collapsed: false,\n        logo:true,\n        name:\"Risk Engine\"\n      };\n      \n      toggle = () => {\n        this.setState({\n          collapsed: !this.state.collapsed,\n          logo:!this.state.logo\n        });\n        this.logo()\n      };\n      logo=()=>{\n          if(!this.state.logo){\n              this.setState({name:\"Risk Engine\"})\n          }else{\n            this.setState({name:\"\"})\n          }\n      }\n      render() {\n        return (\n            <Layout>\n            <Sider trigger={null} collapsible collapsed={this.state.collapsed}  theme=\"light\" >\n            \n                \n             \n           <div className=\"bg-blue-1\">\n          <a href=\"/RiskMonitoring/dashboard\"> <img src=\"../image/logo-doku.png\" className=\"logo pl-2\" alt=\"doku\"/> <span className=\"text-white font-weight-bold logo-text\">{this.state.name}</span> </a>\n           </div>\n         \n              \n              <Menu theme=\"white\" mode=\"inline\" defaultSelectedKeys={['1']}>\n            \n                <Menu.Item key=\"1\" >\n                 <a href=\"/RiskMonitoring/dashboard\"> <Icon type=\"home\" />\n                  <span>Dashboard</span></a>\n                </Menu.Item>\n                <SubMenu\n                    key=\"sub1\"\n                    title={\n                        <span>\n                        <Icon type=\"check-square\"  />\n                       <span>Verification</span> \n                        </span>\n                    }\n                    \n                >\n                <Menu.Item key=\"4\">option1</Menu.Item>\n                <Menu.Item key=\"5\">option2</Menu.Item>\n                <Menu.Item key=\"6\">option3</Menu.Item>\n            </SubMenu>\n            <SubMenu\n                    key=\"sub2\"\n                    title={\n                        <span>\n                        <Icon type=\"setting\" theme=\"filled\" />\n                       <span>Tools</span> \n                        </span>\n                    }\n                    \n                >\n                <Menu.Item key=\"7\"><a href=\"/RiskMonitoring/manageusers\">Manage Users</a></Menu.Item>\n                <Menu.Item key=\"8\"><a href=\"/RiskMonitoring/managemenu\">Manage Menu</a></Menu.Item>\n                <Menu.Item key=\"9\"><a href=\"/RiskMonitoring/managegroupmenu\">Manage Group Menu</a></Menu.Item>\n                <Menu.Item key=\"10\" > <a href=\"/RiskMonitoring/managemerchant\">Manage Merchant</a></Menu.Item>\n            </SubMenu>\n              </Menu>\n            </Sider>\n            <Layout>\n              <div style={{ background: '#1083da'}} className=\"py-1\">\n                <Navbar  light expand=\"md\">\n                \n                <Icon\n              className=\"trigger text-white\"\n              type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\n              onClick={this.toggle}\n            />\n          \n            <Nav className=\"mr-auto\" navbar>\n              <NavItem>\n              <div class=\"wrapper-nameuser\">\n                                <div class=\"name-user\">\n                                    <span class=\"text-white\"> Welcome,</span> &nbsp; \n                                    <span class=\"text-white font-weight-bold\">dita                                    </span>\n                                </div>\n                                <div class=\"text-white\">\n                                    Level, \n                                    <span class=\"font-weight-bold font-reg\">\n\t                                    \t\tADMIN\n                                    </span>\n                                </div>\n                            </div>\n              </NavItem>      \n            </Nav>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n             <div className=\" hvr-rectangle-out\">\n             <i class='fas fa-power-off mini-icon '></i>\n             </div>\n              </NavItem>      \n            </Nav>\n         \n        </Navbar>      \n              </div>\n             \n                <MenuRE />\n              \n            </Layout>\n          </Layout>\n        );\n      }\n}\nexport default Homes;\n","import React, { Component } from 'react';\nimport {Route,withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport './support/css/bootstrap.css';\nimport './support/css/bootstrap.min.css';\nimport './App.css'\nimport Homes from './components/home';\nclass App extends Component{\n  render(){\n    return(\n      <div>\n        <Route path=\"/RiskMonitoring\" component={Homes}/>\n      </div>\n    )\n  }\n}\nconst mapStateToProps =(state)=>{\n  return {\n    \n  };\n}\nexport default withRouter(connect(mapStateToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux';\n\nexport default combineReducers({\n \n});\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport reducers from './reducers';\nimport ReduxThunk from 'redux-thunk';\nconst store = createStore(reducers, {}, applyMiddleware(ReduxThunk));\nReactDOM.render(\n    <Provider store={store}>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    </Provider>\n    ,\ndocument.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}